plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'com.bmuschko.docker-remote-api'
}

repositories {
    mavenLocal()
    maven{
        url 'http://maven.aliyun.com/nexus/content/groups/public/'
    }
    mavenCentral()
}
dependencies {
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile('org.springframework.boot:spring-boot-starter-log4j2')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.cloud:spring-cloud-config-server')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    compile('org.springframework.cloud:spring-cloud-starter-bus-amqp')
}

docker {
    url = 'tcp://172.16.200.51:2375'
    registryCredentials{
        url = 'registry.cn-hangzhou.aliyuncs.com'
        username = 'hi30297787@aliyun.com'
        password = 'sdstc!QAZ2wsx'
    }
}

import com.bmuschko.gradle.docker.tasks.image.*

//复制docker文件和jar
task copyDockerfile(type: Copy){
   File srcDir = file(buildDir)
   File targetPath = file("${srcDir.getPath()}/docker/")
   if (!targetPath.exists()){
        targetPath.mkdirs()
   }
   
   from "${srcDir.getPath()}/libs/configserver.jar"
   into "${targetPath.getPath()}/"
   
   from "${srcDir.getPath()}/resources/main/Dockerfile"
   into "${targetPath.getPath()}/"
}

task buildDockerImage(type: DockerBuildImage,dependsOn:copyDockerfile){
    images.add('registry.cn-hangzhou.aliyuncs.com/topcloud/configserver:0.0.1-dev')
}

task pushDockerImage(type: DockerPushImage,dependsOn:buildDockerImage){
   images.add('registry.cn-hangzhou.aliyuncs.com/topcloud/configserver:0.0.1-dev')
}